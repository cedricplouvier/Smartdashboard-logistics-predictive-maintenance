//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.06.29 at 09:44:26 AM CEST 
//


package com.example.demo.SmartDashboard.TransicsClient.gen;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for enumTripStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="enumTripStatus"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Created"/&gt;
 *     &lt;enumeration value="Sending"/&gt;
 *     &lt;enumeration value="Delivered"/&gt;
 *     &lt;enumeration value="Cancelled"/&gt;
 *     &lt;enumeration value="ReadByDriver"/&gt;
 *     &lt;enumeration value="Started"/&gt;
 *     &lt;enumeration value="Finished"/&gt;
 *     &lt;enumeration value="Paused"/&gt;
 *     &lt;enumeration value="Error"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "enumTripStatus")
@XmlEnum
public enum EnumTripStatus {

    @XmlEnumValue("Created")
    CREATED("Created"),
    @XmlEnumValue("Sending")
    SENDING("Sending"),
    @XmlEnumValue("Delivered")
    DELIVERED("Delivered"),
    @XmlEnumValue("Cancelled")
    CANCELLED("Cancelled"),
    @XmlEnumValue("ReadByDriver")
    READ_BY_DRIVER("ReadByDriver"),
    @XmlEnumValue("Started")
    STARTED("Started"),
    @XmlEnumValue("Finished")
    FINISHED("Finished"),
    @XmlEnumValue("Paused")
    PAUSED("Paused"),
    @XmlEnumValue("Error")
    ERROR("Error");
    private final String value;

    EnumTripStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EnumTripStatus fromValue(String v) {
        for (EnumTripStatus c: EnumTripStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
