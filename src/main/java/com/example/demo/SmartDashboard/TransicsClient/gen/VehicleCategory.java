//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.01 at 02:25:39 AM CEST 
//


package com.example.demo.SmartDashboard.TransicsClient.gen;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VehicleCategory.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VehicleCategory"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Unknown"/&gt;
 *     &lt;enumeration value="GeneralCargo"/&gt;
 *     &lt;enumeration value="BulkTransport"/&gt;
 *     &lt;enumeration value="VehicleTransport"/&gt;
 *     &lt;enumeration value="ContainerTransport"/&gt;
 *     &lt;enumeration value="ADRTransport"/&gt;
 *     &lt;enumeration value="RefrigeratedTransport"/&gt;
 *     &lt;enumeration value="WasteTransport"/&gt;
 *     &lt;enumeration value="ChemicalTransport"/&gt;
 *     &lt;enumeration value="FoodTransport"/&gt;
 *     &lt;enumeration value="Distribution"/&gt;
 *     &lt;enumeration value="TXSmart"/&gt;
 *     &lt;enumeration value="ExceptionalTransport"/&gt;
 *     &lt;enumeration value="Other"/&gt;
 *     &lt;enumeration value="SiloTransport"/&gt;
 *     &lt;enumeration value="AnimalTransport"/&gt;
 *     &lt;enumeration value="AGRTransport"/&gt;
 *     &lt;enumeration value="ConcreteMixer"/&gt;
 *     &lt;enumeration value="RoadTrain"/&gt;
 *     &lt;enumeration value="Van"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "VehicleCategory")
@XmlEnum
public enum VehicleCategory {

    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),
    @XmlEnumValue("GeneralCargo")
    GENERAL_CARGO("GeneralCargo"),
    @XmlEnumValue("BulkTransport")
    BULK_TRANSPORT("BulkTransport"),
    @XmlEnumValue("VehicleTransport")
    VEHICLE_TRANSPORT("VehicleTransport"),
    @XmlEnumValue("ContainerTransport")
    CONTAINER_TRANSPORT("ContainerTransport"),
    @XmlEnumValue("ADRTransport")
    ADR_TRANSPORT("ADRTransport"),
    @XmlEnumValue("RefrigeratedTransport")
    REFRIGERATED_TRANSPORT("RefrigeratedTransport"),
    @XmlEnumValue("WasteTransport")
    WASTE_TRANSPORT("WasteTransport"),
    @XmlEnumValue("ChemicalTransport")
    CHEMICAL_TRANSPORT("ChemicalTransport"),
    @XmlEnumValue("FoodTransport")
    FOOD_TRANSPORT("FoodTransport"),
    @XmlEnumValue("Distribution")
    DISTRIBUTION("Distribution"),
    @XmlEnumValue("TXSmart")
    TX_SMART("TXSmart"),
    @XmlEnumValue("ExceptionalTransport")
    EXCEPTIONAL_TRANSPORT("ExceptionalTransport"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    @XmlEnumValue("SiloTransport")
    SILO_TRANSPORT("SiloTransport"),
    @XmlEnumValue("AnimalTransport")
    ANIMAL_TRANSPORT("AnimalTransport"),
    @XmlEnumValue("AGRTransport")
    AGR_TRANSPORT("AGRTransport"),
    @XmlEnumValue("ConcreteMixer")
    CONCRETE_MIXER("ConcreteMixer"),
    @XmlEnumValue("RoadTrain")
    ROAD_TRAIN("RoadTrain"),
    @XmlEnumValue("Van")
    VAN("Van");
    private final String value;

    VehicleCategory(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VehicleCategory fromValue(String v) {
        for (VehicleCategory c: VehicleCategory.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
